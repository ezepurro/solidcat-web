---
const { t, lang } = Astro.props;

interface NavbarItem {
    title: string;
    url: string;
}
---

<nav class="h-22 flex items-center justify-between px-6 w-full mx-auto max-w-screen-xl">
    <!-- Logo -->
    <a href={`/${lang}`} class="flex items-center">
        <img src="solidcat-box2.svg" alt="Solid Cat Brand" class="h-12">
    </a>

    <!-- Mobile Button -->
    <button id="menuButton" class="md:hidden text-white focus:outline-none">
        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
    </button>

    <!-- Desktop -->
    <div class="hidden md:flex items-center space-x-8 ml-auto">
        {t.items.map((item: NavbarItem) => (
            <a href={`${lang}${item.url}`} class="text-white text-lg hover:opacity-80 transition">
                {item.title}
            </a>
        ))}
        <a href={`${lang}${t.getStartedButton.url}`} class="text-black bg-[#fbf0ff] text-lg border rounded-xl px-4 py-2 hover:text-[#fbf0ff] hover:bg-[#2d1434] transition duration-300 ease-in-out font-bold">
            {t.getStartedButton.title}
        </a>
    </div>
</nav>

<!-- Mobile -->
<div id="mobileMenu" class="hidden md:hidden absolute top-20 left-0 w-full bg-[#2d1434] text-white flex flex-col items-center space-y-4 py-4">
    {t.items.map((item: NavbarItem) => (
        <a href={`${lang}${item.url}`} class="text-lg hover:opacity-80 transition">
            {item.title}
        </a>
    ))}
    <a href={`${lang}${t.getStartedButton.url}`} class="text-black bg-[#fbf0ff] text-lg border rounded-xl px-4 py-2 hover:text-[#fbf0ff] hover:bg-[#2d1434] transition duration-300 ease-in-out font-bold">
        {t.getStartedButton.title}
    </a>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const menuButton = document.getElementById("menuButton");
        const mobileMenu = document.getElementById("mobileMenu");

        if (menuButton && mobileMenu) {
            menuButton.addEventListener("click", function () {
                mobileMenu.classList.toggle("hidden");
            });
        }
    });
</script>
